// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#ifndef PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

class CMsgSOIDOwner;
class CMsgSOSingleObject;
class CMsgSOMultipleObjects;
class CMsgSOMultipleObjects_SingleObject;
class CMsgSOCacheSubscribed;
class CMsgSOCacheSubscribed_SubscribedType;
class CMsgSOCacheSubscribedUpToDate;
class CMsgSOCacheUnsubscribed;
class CMsgSOCacheSubscriptionCheck;
class CMsgSOCacheSubscriptionRefresh;
class CMsgSOCacheVersion;
class CMsgGCMultiplexMessage;
class CGCToGCMsgMasterAck;
class CGCToGCMsgMasterAck_Response;
class CGCToGCMsgMasterStartupComplete;
class CGCToGCMsgMasterStartupComplete_GCInfo;
class CGCToGCMsgRouted;
class CGCToGCMsgRoutedReply;
class CMsgGCUpdateSubGCSessionInfo;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate;
class CMsgGCRequestSubGCSessionInfo;
class CMsgGCRequestSubGCSessionInfoResponse;
class CMsgSOCacheHaveVersion;
class CMsgClientHello;
class CMsgClientWelcome;
class CMsgClientWelcome_Location;
class CMsgConnectionStatus;
class CMsgGCToGCSOCacheSubscribe;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions;
class CMsgGCToGCSOCacheUnsubscribe;
class CMsgGCClientPing;
class CWorkshop_PopulateItemDescriptions_Request;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;

enum PartnerAccountType {
  PARTNER_NONE = 0,
  PARTNER_PERFECT_WORLD = 1,
  PARTNER_NEXON = 2
};
bool PartnerAccountType_IsValid(int value);
const PartnerAccountType PartnerAccountType_MIN = PARTNER_NONE;
const PartnerAccountType PartnerAccountType_MAX = PARTNER_NEXON;
const int PartnerAccountType_ARRAYSIZE = PartnerAccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PartnerAccountType_descriptor();
inline const ::std::string& PartnerAccountType_Name(PartnerAccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PartnerAccountType_descriptor(), value);
}
inline bool PartnerAccountType_Parse(
    const ::std::string& name, PartnerAccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PartnerAccountType>(
    PartnerAccountType_descriptor(), name, value);
}
enum GCConnectionStatus {
  GCConnectionStatus_HAVE_SESSION = 0,
  GCConnectionStatus_GC_GOING_DOWN = 1,
  GCConnectionStatus_NO_SESSION = 2,
  GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,
  GCConnectionStatus_NO_STEAM = 4,
  GCConnectionStatus_SUSPENDED = 5
};
bool GCConnectionStatus_IsValid(int value);
const GCConnectionStatus GCConnectionStatus_MIN = GCConnectionStatus_HAVE_SESSION;
const GCConnectionStatus GCConnectionStatus_MAX = GCConnectionStatus_SUSPENDED;
const int GCConnectionStatus_ARRAYSIZE = GCConnectionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCConnectionStatus_descriptor();
inline const ::std::string& GCConnectionStatus_Name(GCConnectionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCConnectionStatus_descriptor(), value);
}
inline bool GCConnectionStatus_Parse(
    const ::std::string& name, GCConnectionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCConnectionStatus>(
    GCConnectionStatus_descriptor(), name, value);
}
// ===================================================================

class CMsgSOIDOwner : public ::google::protobuf::Message {
 public:
  CMsgSOIDOwner();
  virtual ~CMsgSOIDOwner();
  
  CMsgSOIDOwner(const CMsgSOIDOwner& from);
  
  inline CMsgSOIDOwner& operator=(const CMsgSOIDOwner& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOIDOwner& default_instance();
  
  void Swap(CMsgSOIDOwner* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOIDOwner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOIDOwner& from);
  void MergeFrom(const CMsgSOIDOwner& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOIDOwner)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOIDOwner* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOSingleObject : public ::google::protobuf::Message {
 public:
  CMsgSOSingleObject();
  virtual ~CMsgSOSingleObject();
  
  CMsgSOSingleObject(const CMsgSOSingleObject& from);
  
  inline CMsgSOSingleObject& operator=(const CMsgSOSingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOSingleObject& default_instance();
  
  void Swap(CMsgSOSingleObject* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOSingleObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOSingleObject& from);
  void MergeFrom(const CMsgSOSingleObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type_id = 2;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);
  
  // optional bytes object_data = 3;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  
  // optional fixed64 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // optional .CMsgSOIDOwner owner_soid = 5;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 5;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // optional uint32 service_id = 6;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 6;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOSingleObject)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* object_data_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::uint32 service_id_;
  ::CMsgSOIDOwner* owner_soid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOSingleObject* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects_SingleObject : public ::google::protobuf::Message {
 public:
  CMsgSOMultipleObjects_SingleObject();
  virtual ~CMsgSOMultipleObjects_SingleObject();
  
  CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from);
  
  inline CMsgSOMultipleObjects_SingleObject& operator=(const CMsgSOMultipleObjects_SingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects_SingleObject& default_instance();
  
  void Swap(CMsgSOMultipleObjects_SingleObject* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOMultipleObjects_SingleObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void MergeFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);
  
  // optional bytes object_data = 2;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  
  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects.SingleObject)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* object_data_;
  ::google::protobuf::int32 type_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOMultipleObjects_SingleObject* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects : public ::google::protobuf::Message {
 public:
  CMsgSOMultipleObjects();
  virtual ~CMsgSOMultipleObjects();
  
  CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from);
  
  inline CMsgSOMultipleObjects& operator=(const CMsgSOMultipleObjects& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects& default_instance();
  
  void Swap(CMsgSOMultipleObjects* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOMultipleObjects* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOMultipleObjects& from);
  void MergeFrom(const CMsgSOMultipleObjects& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgSOMultipleObjects_SingleObject SingleObject;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  inline int objects_modified_size() const;
  inline void clear_objects_modified();
  static const int kObjectsModifiedFieldNumber = 2;
  inline const ::CMsgSOMultipleObjects_SingleObject& objects_modified(int index) const;
  inline ::CMsgSOMultipleObjects_SingleObject* mutable_objects_modified(int index);
  inline ::CMsgSOMultipleObjects_SingleObject* add_objects_modified();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_modified() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_modified();
  
  // optional fixed64 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
  inline int objects_added_size() const;
  inline void clear_objects_added();
  static const int kObjectsAddedFieldNumber = 4;
  inline const ::CMsgSOMultipleObjects_SingleObject& objects_added(int index) const;
  inline ::CMsgSOMultipleObjects_SingleObject* mutable_objects_added(int index);
  inline ::CMsgSOMultipleObjects_SingleObject* add_objects_added();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_added() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_added();
  
  // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
  inline int objects_removed_size() const;
  inline void clear_objects_removed();
  static const int kObjectsRemovedFieldNumber = 5;
  inline const ::CMsgSOMultipleObjects_SingleObject& objects_removed(int index) const;
  inline ::CMsgSOMultipleObjects_SingleObject* mutable_objects_removed(int index);
  inline ::CMsgSOMultipleObjects_SingleObject* add_objects_removed();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_removed() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_removed();
  
  // optional .CMsgSOIDOwner owner_soid = 6;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 6;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // optional uint32 service_id = 7;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 7;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_modified_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_added_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_removed_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint32 service_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOMultipleObjects* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed_SubscribedType : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscribed_SubscribedType();
  virtual ~CMsgSOCacheSubscribed_SubscribedType();
  
  CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from);
  
  inline CMsgSOCacheSubscribed_SubscribedType& operator=(const CMsgSOCacheSubscribed_SubscribedType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed_SubscribedType& default_instance();
  
  void Swap(CMsgSOCacheSubscribed_SubscribedType* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheSubscribed_SubscribedType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);
  
  // repeated bytes object_data = 2;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed.SubscribedType)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::int32 type_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheSubscribed_SubscribedType* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscribed();
  virtual ~CMsgSOCacheSubscribed();
  
  CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from);
  
  inline CMsgSOCacheSubscribed& operator=(const CMsgSOCacheSubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed& default_instance();
  
  void Swap(CMsgSOCacheSubscribed* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheSubscribed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscribed& from);
  void MergeFrom(const CMsgSOCacheSubscribed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgSOCacheSubscribed_SubscribedType SubscribedType;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::CMsgSOCacheSubscribed_SubscribedType& objects(int index) const;
  inline ::CMsgSOCacheSubscribed_SubscribedType* mutable_objects(int index);
  inline ::CMsgSOCacheSubscribed_SubscribedType* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
      mutable_objects();
  
  // optional fixed64 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // optional .CMsgSOIDOwner owner_soid = 4;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 4;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // optional uint32 service_id = 5;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 5;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // repeated uint32 service_list = 6;
  inline int service_list_size() const;
  inline void clear_service_list();
  static const int kServiceListFieldNumber = 6;
  inline ::google::protobuf::uint32 service_list(int index) const;
  inline void set_service_list(int index, ::google::protobuf::uint32 value);
  inline void add_service_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();
  
  // optional fixed64 sync_version = 7;
  inline bool has_sync_version() const;
  inline void clear_sync_version();
  static const int kSyncVersionFieldNumber = 7;
  inline ::google::protobuf::uint64 sync_version() const;
  inline void set_sync_version(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_sync_version();
  inline void clear_has_sync_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType > objects_;
  ::google::protobuf::uint64 version_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheSubscribed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribedUpToDate : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscribedUpToDate();
  virtual ~CMsgSOCacheSubscribedUpToDate();
  
  CMsgSOCacheSubscribedUpToDate(const CMsgSOCacheSubscribedUpToDate& from);
  
  inline CMsgSOCacheSubscribedUpToDate& operator=(const CMsgSOCacheSubscribedUpToDate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribedUpToDate& default_instance();
  
  void Swap(CMsgSOCacheSubscribedUpToDate* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheSubscribedUpToDate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscribedUpToDate& from);
  void MergeFrom(const CMsgSOCacheSubscribedUpToDate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // optional .CMsgSOIDOwner owner_soid = 2;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 2;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // optional uint32 service_id = 3;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // repeated uint32 service_list = 4;
  inline int service_list_size() const;
  inline void clear_service_list();
  static const int kServiceListFieldNumber = 4;
  inline ::google::protobuf::uint32 service_list(int index) const;
  inline void set_service_list(int index, ::google::protobuf::uint32 value);
  inline void add_service_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();
  
  // optional fixed64 sync_version = 5;
  inline bool has_sync_version() const;
  inline void clear_sync_version();
  static const int kSyncVersionFieldNumber = 5;
  inline ::google::protobuf::uint64 sync_version() const;
  inline void set_sync_version(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribedUpToDate)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_sync_version();
  inline void clear_has_sync_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 version_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheSubscribedUpToDate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheUnsubscribed : public ::google::protobuf::Message {
 public:
  CMsgSOCacheUnsubscribed();
  virtual ~CMsgSOCacheUnsubscribed();
  
  CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from);
  
  inline CMsgSOCacheUnsubscribed& operator=(const CMsgSOCacheUnsubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheUnsubscribed& default_instance();
  
  void Swap(CMsgSOCacheUnsubscribed* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheUnsubscribed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheUnsubscribed& from);
  void MergeFrom(const CMsgSOCacheUnsubscribed& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgSOIDOwner owner_soid = 2;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 2;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheUnsubscribed)
 private:
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CMsgSOIDOwner* owner_soid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheUnsubscribed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionCheck : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscriptionCheck();
  virtual ~CMsgSOCacheSubscriptionCheck();
  
  CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from);
  
  inline CMsgSOCacheSubscriptionCheck& operator=(const CMsgSOCacheSubscriptionCheck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionCheck& default_instance();
  
  void Swap(CMsgSOCacheSubscriptionCheck* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheSubscriptionCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscriptionCheck& from);
  void MergeFrom(const CMsgSOCacheSubscriptionCheck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // optional .CMsgSOIDOwner owner_soid = 3;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 3;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // optional uint32 service_id = 4;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // repeated uint32 service_list = 5;
  inline int service_list_size() const;
  inline void clear_service_list();
  static const int kServiceListFieldNumber = 5;
  inline ::google::protobuf::uint32 service_list(int index) const;
  inline void set_service_list(int index, ::google::protobuf::uint32 value);
  inline void add_service_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();
  
  // optional fixed64 sync_version = 6;
  inline bool has_sync_version() const;
  inline void clear_sync_version();
  static const int kSyncVersionFieldNumber = 6;
  inline ::google::protobuf::uint64 sync_version() const;
  inline void set_sync_version(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionCheck)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_sync_version();
  inline void clear_has_sync_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 version_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheSubscriptionCheck* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionRefresh : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscriptionRefresh();
  virtual ~CMsgSOCacheSubscriptionRefresh();
  
  CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from);
  
  inline CMsgSOCacheSubscriptionRefresh& operator=(const CMsgSOCacheSubscriptionRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionRefresh& default_instance();
  
  void Swap(CMsgSOCacheSubscriptionRefresh* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheSubscriptionRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void MergeFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgSOIDOwner owner_soid = 2;
  inline bool has_owner_soid() const;
  inline void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 2;
  inline const ::CMsgSOIDOwner& owner_soid() const;
  inline ::CMsgSOIDOwner* mutable_owner_soid();
  inline ::CMsgSOIDOwner* release_owner_soid();
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionRefresh)
 private:
  inline void set_has_owner_soid();
  inline void clear_has_owner_soid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CMsgSOIDOwner* owner_soid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheSubscriptionRefresh* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheVersion : public ::google::protobuf::Message {
 public:
  CMsgSOCacheVersion();
  virtual ~CMsgSOCacheVersion();
  
  CMsgSOCacheVersion(const CMsgSOCacheVersion& from);
  
  inline CMsgSOCacheVersion& operator=(const CMsgSOCacheVersion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheVersion& default_instance();
  
  void Swap(CMsgSOCacheVersion* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheVersion& from);
  void MergeFrom(const CMsgSOCacheVersion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheVersion)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheVersion* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCMultiplexMessage : public ::google::protobuf::Message {
 public:
  CMsgGCMultiplexMessage();
  virtual ~CMsgGCMultiplexMessage();
  
  CMsgGCMultiplexMessage(const CMsgGCMultiplexMessage& from);
  
  inline CMsgGCMultiplexMessage& operator=(const CMsgGCMultiplexMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMultiplexMessage& default_instance();
  
  void Swap(CMsgGCMultiplexMessage* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCMultiplexMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCMultiplexMessage& from);
  void MergeFrom(const CMsgGCMultiplexMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 msgtype = 1;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);
  
  // optional bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  
  // repeated fixed64 steamids = 3;
  inline int steamids_size() const;
  inline void clear_steamids();
  static const int kSteamidsFieldNumber = 3;
  inline ::google::protobuf::uint64 steamids(int index) const;
  inline void set_steamids(int index, ::google::protobuf::uint64 value);
  inline void add_steamids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamids();
  
  // @@protoc_insertion_point(class_scope:CMsgGCMultiplexMessage)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_payload();
  inline void clear_has_payload();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* payload_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamids_;
  ::google::protobuf::uint32 msgtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCMultiplexMessage* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck : public ::google::protobuf::Message {
 public:
  CGCToGCMsgMasterAck();
  virtual ~CGCToGCMsgMasterAck();
  
  CGCToGCMsgMasterAck(const CGCToGCMsgMasterAck& from);
  
  inline CGCToGCMsgMasterAck& operator=(const CGCToGCMsgMasterAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterAck& default_instance();
  
  void Swap(CGCToGCMsgMasterAck* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgMasterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgMasterAck& from);
  void MergeFrom(const CGCToGCMsgMasterAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 dir_index = 1;
  inline bool has_dir_index() const;
  inline void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 dir_index() const;
  inline void set_dir_index(::google::protobuf::uint32 value);
  
  // optional string machine_name = 3;
  inline bool has_machine_name() const;
  inline void clear_machine_name();
  static const int kMachineNameFieldNumber = 3;
  inline const ::std::string& machine_name() const;
  inline void set_machine_name(const ::std::string& value);
  inline void set_machine_name(const char* value);
  inline void set_machine_name(const char* value, size_t size);
  inline ::std::string* mutable_machine_name();
  inline ::std::string* release_machine_name();
  
  // optional string process_name = 4;
  inline bool has_process_name() const;
  inline void clear_process_name();
  static const int kProcessNameFieldNumber = 4;
  inline const ::std::string& process_name() const;
  inline void set_process_name(const ::std::string& value);
  inline void set_process_name(const char* value);
  inline void set_process_name(const char* value, size_t size);
  inline ::std::string* mutable_process_name();
  inline ::std::string* release_process_name();
  
  // repeated uint32 type_instances = 5;
  inline int type_instances_size() const;
  inline void clear_type_instances();
  static const int kTypeInstancesFieldNumber = 5;
  inline ::google::protobuf::uint32 type_instances(int index) const;
  inline void set_type_instances(int index, ::google::protobuf::uint32 value);
  inline void add_type_instances(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      type_instances() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_type_instances();
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck)
 private:
  inline void set_has_dir_index();
  inline void clear_has_dir_index();
  inline void set_has_machine_name();
  inline void clear_has_machine_name();
  inline void set_has_process_name();
  inline void clear_has_process_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* machine_name_;
  ::std::string* process_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > type_instances_;
  ::google::protobuf::uint32 dir_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgMasterAck* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck_Response : public ::google::protobuf::Message {
 public:
  CGCToGCMsgMasterAck_Response();
  virtual ~CGCToGCMsgMasterAck_Response();
  
  CGCToGCMsgMasterAck_Response(const CGCToGCMsgMasterAck_Response& from);
  
  inline CGCToGCMsgMasterAck_Response& operator=(const CGCToGCMsgMasterAck_Response& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterAck_Response& default_instance();
  
  void Swap(CGCToGCMsgMasterAck_Response* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgMasterAck_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgMasterAck_Response& from);
  void MergeFrom(const CGCToGCMsgMasterAck_Response& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck_Response)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 eresult_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgMasterAck_Response* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete_GCInfo : public ::google::protobuf::Message {
 public:
  CGCToGCMsgMasterStartupComplete_GCInfo();
  virtual ~CGCToGCMsgMasterStartupComplete_GCInfo();
  
  CGCToGCMsgMasterStartupComplete_GCInfo(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  
  inline CGCToGCMsgMasterStartupComplete_GCInfo& operator=(const CGCToGCMsgMasterStartupComplete_GCInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterStartupComplete_GCInfo& default_instance();
  
  void Swap(CGCToGCMsgMasterStartupComplete_GCInfo* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgMasterStartupComplete_GCInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 dir_index = 1;
  inline bool has_dir_index() const;
  inline void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 dir_index() const;
  inline void set_dir_index(::google::protobuf::uint32 value);
  
  // optional string machine_name = 2;
  inline bool has_machine_name() const;
  inline void clear_machine_name();
  static const int kMachineNameFieldNumber = 2;
  inline const ::std::string& machine_name() const;
  inline void set_machine_name(const ::std::string& value);
  inline void set_machine_name(const char* value);
  inline void set_machine_name(const char* value, size_t size);
  inline ::std::string* mutable_machine_name();
  inline ::std::string* release_machine_name();
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete.GCInfo)
 private:
  inline void set_has_dir_index();
  inline void clear_has_dir_index();
  inline void set_has_machine_name();
  inline void clear_has_machine_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* machine_name_;
  ::google::protobuf::uint32 dir_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgMasterStartupComplete_GCInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete : public ::google::protobuf::Message {
 public:
  CGCToGCMsgMasterStartupComplete();
  virtual ~CGCToGCMsgMasterStartupComplete();
  
  CGCToGCMsgMasterStartupComplete(const CGCToGCMsgMasterStartupComplete& from);
  
  inline CGCToGCMsgMasterStartupComplete& operator=(const CGCToGCMsgMasterStartupComplete& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterStartupComplete& default_instance();
  
  void Swap(CGCToGCMsgMasterStartupComplete* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgMasterStartupComplete* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgMasterStartupComplete& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CGCToGCMsgMasterStartupComplete_GCInfo GCInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
  inline int gc_info_size() const;
  inline void clear_gc_info();
  static const int kGcInfoFieldNumber = 1;
  inline const ::CGCToGCMsgMasterStartupComplete_GCInfo& gc_info(int index) const;
  inline ::CGCToGCMsgMasterStartupComplete_GCInfo* mutable_gc_info(int index);
  inline ::CGCToGCMsgMasterStartupComplete_GCInfo* add_gc_info();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
      gc_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
      mutable_gc_info();
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo > gc_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgMasterStartupComplete* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgRouted : public ::google::protobuf::Message {
 public:
  CGCToGCMsgRouted();
  virtual ~CGCToGCMsgRouted();
  
  CGCToGCMsgRouted(const CGCToGCMsgRouted& from);
  
  inline CGCToGCMsgRouted& operator=(const CGCToGCMsgRouted& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgRouted& default_instance();
  
  void Swap(CGCToGCMsgRouted* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgRouted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgRouted& from);
  void MergeFrom(const CGCToGCMsgRouted& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);
  
  // optional fixed64 sender_id = 2;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint64 value);
  
  // optional bytes net_message = 3;
  inline bool has_net_message() const;
  inline void clear_net_message();
  static const int kNetMessageFieldNumber = 3;
  inline const ::std::string& net_message() const;
  inline void set_net_message(const ::std::string& value);
  inline void set_net_message(const char* value);
  inline void set_net_message(const void* value, size_t size);
  inline ::std::string* mutable_net_message();
  inline ::std::string* release_net_message();
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgRouted)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_net_message();
  inline void clear_has_net_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 sender_id_;
  ::std::string* net_message_;
  ::google::protobuf::uint32 msg_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgRouted* default_instance_;
};
// -------------------------------------------------------------------

class CGCToGCMsgRoutedReply : public ::google::protobuf::Message {
 public:
  CGCToGCMsgRoutedReply();
  virtual ~CGCToGCMsgRoutedReply();
  
  CGCToGCMsgRoutedReply(const CGCToGCMsgRoutedReply& from);
  
  inline CGCToGCMsgRoutedReply& operator=(const CGCToGCMsgRoutedReply& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgRoutedReply& default_instance();
  
  void Swap(CGCToGCMsgRoutedReply* other);
  
  // implements Message ----------------------------------------------
  
  CGCToGCMsgRoutedReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCToGCMsgRoutedReply& from);
  void MergeFrom(const CGCToGCMsgRoutedReply& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);
  
  // optional bytes net_message = 2;
  inline bool has_net_message() const;
  inline void clear_net_message();
  static const int kNetMessageFieldNumber = 2;
  inline const ::std::string& net_message() const;
  inline void set_net_message(const ::std::string& value);
  inline void set_net_message(const char* value);
  inline void set_net_message(const void* value, size_t size);
  inline ::std::string* mutable_net_message();
  inline ::std::string* release_net_message();
  
  // @@protoc_insertion_point(class_scope:CGCToGCMsgRoutedReply)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_net_message();
  inline void clear_has_net_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* net_message_;
  ::google::protobuf::uint32 msg_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CGCToGCMsgRoutedReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate : public ::google::protobuf::Message {
 public:
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
  virtual ~CMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
  
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  
  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& operator=(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& default_instance();
  
  void Swap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);
  
  // optional fixed32 ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // optional bool trusted = 3;
  inline bool has_trusted() const;
  inline void clear_trusted();
  static const int kTrustedFieldNumber = 3;
  inline bool trusted() const;
  inline void set_trusted(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_trusted();
  inline void clear_has_trusted();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 ip_;
  bool trusted_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo : public ::google::protobuf::Message {
 public:
  CMsgGCUpdateSubGCSessionInfo();
  virtual ~CMsgGCUpdateSubGCSessionInfo();
  
  CMsgGCUpdateSubGCSessionInfo(const CMsgGCUpdateSubGCSessionInfo& from);
  
  inline CMsgGCUpdateSubGCSessionInfo& operator=(const CMsgGCUpdateSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCUpdateSubGCSessionInfo& default_instance();
  
  void Swap(CMsgGCUpdateSubGCSessionInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCUpdateSubGCSessionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGCUpdateSubGCSessionInfo_CMsgUpdate CMsgUpdate;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
  inline int updates_size() const;
  inline void clear_updates();
  static const int kUpdatesFieldNumber = 1;
  inline const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& updates(int index) const;
  inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* mutable_updates(int index);
  inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* add_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
      updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
      mutable_updates();
  
  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate > updates_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCUpdateSubGCSessionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfo : public ::google::protobuf::Message {
 public:
  CMsgGCRequestSubGCSessionInfo();
  virtual ~CMsgGCRequestSubGCSessionInfo();
  
  CMsgGCRequestSubGCSessionInfo(const CMsgGCRequestSubGCSessionInfo& from);
  
  inline CMsgGCRequestSubGCSessionInfo& operator=(const CMsgGCRequestSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestSubGCSessionInfo& default_instance();
  
  void Swap(CMsgGCRequestSubGCSessionInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCRequestSubGCSessionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCRequestSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfo)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 steamid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCRequestSubGCSessionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfoResponse : public ::google::protobuf::Message {
 public:
  CMsgGCRequestSubGCSessionInfoResponse();
  virtual ~CMsgGCRequestSubGCSessionInfoResponse();
  
  CMsgGCRequestSubGCSessionInfoResponse(const CMsgGCRequestSubGCSessionInfoResponse& from);
  
  inline CMsgGCRequestSubGCSessionInfoResponse& operator=(const CMsgGCRequestSubGCSessionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestSubGCSessionInfoResponse& default_instance();
  
  void Swap(CMsgGCRequestSubGCSessionInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCRequestSubGCSessionInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);
  
  // optional bool trusted = 2;
  inline bool has_trusted() const;
  inline void clear_trusted();
  static const int kTrustedFieldNumber = 2;
  inline bool trusted() const;
  inline void set_trusted(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfoResponse)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_trusted();
  inline void clear_has_trusted();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ip_;
  bool trusted_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCRequestSubGCSessionInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheHaveVersion : public ::google::protobuf::Message {
 public:
  CMsgSOCacheHaveVersion();
  virtual ~CMsgSOCacheHaveVersion();
  
  CMsgSOCacheHaveVersion(const CMsgSOCacheHaveVersion& from);
  
  inline CMsgSOCacheHaveVersion& operator=(const CMsgSOCacheHaveVersion& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheHaveVersion& default_instance();
  
  void Swap(CMsgSOCacheHaveVersion* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSOCacheHaveVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheHaveVersion& from);
  void MergeFrom(const CMsgSOCacheHaveVersion& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .CMsgSOIDOwner soid = 1;
  inline bool has_soid() const;
  inline void clear_soid();
  static const int kSoidFieldNumber = 1;
  inline const ::CMsgSOIDOwner& soid() const;
  inline ::CMsgSOIDOwner* mutable_soid();
  inline ::CMsgSOIDOwner* release_soid();
  
  // optional fixed64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // optional uint32 service_id = 3;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // optional uint32 cached_file_version = 4;
  inline bool has_cached_file_version() const;
  inline void clear_cached_file_version();
  static const int kCachedFileVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 cached_file_version() const;
  inline void set_cached_file_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSOCacheHaveVersion)
 private:
  inline void set_has_soid();
  inline void clear_has_soid();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_cached_file_version();
  inline void clear_has_cached_file_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CMsgSOIDOwner* soid_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_id_;
  ::google::protobuf::uint32 cached_file_version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSOCacheHaveVersion* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientHello : public ::google::protobuf::Message {
 public:
  CMsgClientHello();
  virtual ~CMsgClientHello();
  
  CMsgClientHello(const CMsgClientHello& from);
  
  inline CMsgClientHello& operator=(const CMsgClientHello& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientHello& default_instance();
  
  void Swap(CMsgClientHello* other);
  
  // implements Message ----------------------------------------------
  
  CMsgClientHello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientHello& from);
  void MergeFrom(const CMsgClientHello& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  inline int socache_have_versions_size() const;
  inline void clear_socache_have_versions();
  static const int kSocacheHaveVersionsFieldNumber = 2;
  inline const ::CMsgSOCacheHaveVersion& socache_have_versions(int index) const;
  inline ::CMsgSOCacheHaveVersion* mutable_socache_have_versions(int index);
  inline ::CMsgSOCacheHaveVersion* add_socache_have_versions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
      socache_have_versions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
      mutable_socache_have_versions();
  
  // optional uint32 client_session_need = 3;
  inline bool has_client_session_need() const;
  inline void clear_client_session_need();
  static const int kClientSessionNeedFieldNumber = 3;
  inline ::google::protobuf::uint32 client_session_need() const;
  inline void set_client_session_need(::google::protobuf::uint32 value);
  
  // optional .PartnerAccountType client_launcher = 4 [default = PARTNER_NONE];
  inline bool has_client_launcher() const;
  inline void clear_client_launcher();
  static const int kClientLauncherFieldNumber = 4;
  inline PartnerAccountType client_launcher() const;
  inline void set_client_launcher(PartnerAccountType value);
  
  // optional string secret_key = 5;
  inline bool has_secret_key() const;
  inline void clear_secret_key();
  static const int kSecretKeyFieldNumber = 5;
  inline const ::std::string& secret_key() const;
  inline void set_secret_key(const ::std::string& value);
  inline void set_secret_key(const char* value);
  inline void set_secret_key(const char* value, size_t size);
  inline ::std::string* mutable_secret_key();
  inline ::std::string* release_secret_key();
  
  // @@protoc_insertion_point(class_scope:CMsgClientHello)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_client_session_need();
  inline void clear_has_client_session_need();
  inline void set_has_client_launcher();
  inline void clear_has_client_launcher();
  inline void set_has_secret_key();
  inline void clear_has_secret_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion > socache_have_versions_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 client_session_need_;
  ::std::string* secret_key_;
  int client_launcher_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgClientHello* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientWelcome_Location : public ::google::protobuf::Message {
 public:
  CMsgClientWelcome_Location();
  virtual ~CMsgClientWelcome_Location();
  
  CMsgClientWelcome_Location(const CMsgClientWelcome_Location& from);
  
  inline CMsgClientWelcome_Location& operator=(const CMsgClientWelcome_Location& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientWelcome_Location& default_instance();
  
  void Swap(CMsgClientWelcome_Location* other);
  
  // implements Message ----------------------------------------------
  
  CMsgClientWelcome_Location* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientWelcome_Location& from);
  void MergeFrom(const CMsgClientWelcome_Location& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float latitude = 1;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  inline float latitude() const;
  inline void set_latitude(float value);
  
  // optional float longitude = 2;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  inline float longitude() const;
  inline void set_longitude(float value);
  
  // optional string country = 3;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 3;
  inline const ::std::string& country() const;
  inline void set_country(const ::std::string& value);
  inline void set_country(const char* value);
  inline void set_country(const char* value, size_t size);
  inline ::std::string* mutable_country();
  inline ::std::string* release_country();
  
  // @@protoc_insertion_point(class_scope:CMsgClientWelcome.Location)
 private:
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_country();
  inline void clear_has_country();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float latitude_;
  float longitude_;
  ::std::string* country_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgClientWelcome_Location* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientWelcome : public ::google::protobuf::Message {
 public:
  CMsgClientWelcome();
  virtual ~CMsgClientWelcome();
  
  CMsgClientWelcome(const CMsgClientWelcome& from);
  
  inline CMsgClientWelcome& operator=(const CMsgClientWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientWelcome& default_instance();
  
  void Swap(CMsgClientWelcome* other);
  
  // implements Message ----------------------------------------------
  
  CMsgClientWelcome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientWelcome& from);
  void MergeFrom(const CMsgClientWelcome& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgClientWelcome_Location Location;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // optional bytes game_data = 2;
  inline bool has_game_data() const;
  inline void clear_game_data();
  static const int kGameDataFieldNumber = 2;
  inline const ::std::string& game_data() const;
  inline void set_game_data(const ::std::string& value);
  inline void set_game_data(const char* value);
  inline void set_game_data(const void* value, size_t size);
  inline ::std::string* mutable_game_data();
  inline ::std::string* release_game_data();
  
  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  inline int outofdate_subscribed_caches_size() const;
  inline void clear_outofdate_subscribed_caches();
  static const int kOutofdateSubscribedCachesFieldNumber = 3;
  inline const ::CMsgSOCacheSubscribed& outofdate_subscribed_caches(int index) const;
  inline ::CMsgSOCacheSubscribed* mutable_outofdate_subscribed_caches(int index);
  inline ::CMsgSOCacheSubscribed* add_outofdate_subscribed_caches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >&
      outofdate_subscribed_caches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >*
      mutable_outofdate_subscribed_caches();
  
  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  inline int uptodate_subscribed_caches_size() const;
  inline void clear_uptodate_subscribed_caches();
  static const int kUptodateSubscribedCachesFieldNumber = 4;
  inline const ::CMsgSOCacheSubscriptionCheck& uptodate_subscribed_caches(int index) const;
  inline ::CMsgSOCacheSubscriptionCheck* mutable_uptodate_subscribed_caches(int index);
  inline ::CMsgSOCacheSubscriptionCheck* add_uptodate_subscribed_caches();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >&
      uptodate_subscribed_caches() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >*
      mutable_uptodate_subscribed_caches();
  
  // optional .CMsgClientWelcome.Location location = 5;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 5;
  inline const ::CMsgClientWelcome_Location& location() const;
  inline ::CMsgClientWelcome_Location* mutable_location();
  inline ::CMsgClientWelcome_Location* release_location();
  
  // optional bytes save_game_key = 6;
  inline bool has_save_game_key() const;
  inline void clear_save_game_key();
  static const int kSaveGameKeyFieldNumber = 6;
  inline const ::std::string& save_game_key() const;
  inline void set_save_game_key(const ::std::string& value);
  inline void set_save_game_key(const char* value);
  inline void set_save_game_key(const void* value, size_t size);
  inline ::std::string* mutable_save_game_key();
  inline ::std::string* release_save_game_key();
  
  // @@protoc_insertion_point(class_scope:CMsgClientWelcome)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_game_data();
  inline void clear_has_game_data();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_save_game_key();
  inline void clear_has_save_game_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* game_data_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed > outofdate_subscribed_caches_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck > uptodate_subscribed_caches_;
  ::CMsgClientWelcome_Location* location_;
  ::std::string* save_game_key_;
  ::google::protobuf::uint32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgClientWelcome* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConnectionStatus : public ::google::protobuf::Message {
 public:
  CMsgConnectionStatus();
  virtual ~CMsgConnectionStatus();
  
  CMsgConnectionStatus(const CMsgConnectionStatus& from);
  
  inline CMsgConnectionStatus& operator=(const CMsgConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConnectionStatus& default_instance();
  
  void Swap(CMsgConnectionStatus* other);
  
  // implements Message ----------------------------------------------
  
  CMsgConnectionStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConnectionStatus& from);
  void MergeFrom(const CMsgConnectionStatus& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline GCConnectionStatus status() const;
  inline void set_status(GCConnectionStatus value);
  
  // optional uint32 client_session_need = 2;
  inline bool has_client_session_need() const;
  inline void clear_client_session_need();
  static const int kClientSessionNeedFieldNumber = 2;
  inline ::google::protobuf::uint32 client_session_need() const;
  inline void set_client_session_need(::google::protobuf::uint32 value);
  
  // optional int32 queue_position = 3;
  inline bool has_queue_position() const;
  inline void clear_queue_position();
  static const int kQueuePositionFieldNumber = 3;
  inline ::google::protobuf::int32 queue_position() const;
  inline void set_queue_position(::google::protobuf::int32 value);
  
  // optional int32 queue_size = 4;
  inline bool has_queue_size() const;
  inline void clear_queue_size();
  static const int kQueueSizeFieldNumber = 4;
  inline ::google::protobuf::int32 queue_size() const;
  inline void set_queue_size(::google::protobuf::int32 value);
  
  // optional int32 wait_seconds = 5;
  inline bool has_wait_seconds() const;
  inline void clear_wait_seconds();
  static const int kWaitSecondsFieldNumber = 5;
  inline ::google::protobuf::int32 wait_seconds() const;
  inline void set_wait_seconds(::google::protobuf::int32 value);
  
  // optional int32 estimated_wait_seconds_remaining = 6;
  inline bool has_estimated_wait_seconds_remaining() const;
  inline void clear_estimated_wait_seconds_remaining();
  static const int kEstimatedWaitSecondsRemainingFieldNumber = 6;
  inline ::google::protobuf::int32 estimated_wait_seconds_remaining() const;
  inline void set_estimated_wait_seconds_remaining(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgConnectionStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_client_session_need();
  inline void clear_has_client_session_need();
  inline void set_has_queue_position();
  inline void clear_has_queue_position();
  inline void set_has_queue_size();
  inline void clear_has_queue_size();
  inline void set_has_wait_seconds();
  inline void clear_has_wait_seconds();
  inline void set_has_estimated_wait_seconds_remaining();
  inline void clear_has_estimated_wait_seconds_remaining();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int status_;
  ::google::protobuf::uint32 client_session_need_;
  ::google::protobuf::int32 queue_position_;
  ::google::protobuf::int32 queue_size_;
  ::google::protobuf::int32 wait_seconds_;
  ::google::protobuf::int32 estimated_wait_seconds_remaining_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgConnectionStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions : public ::google::protobuf::Message {
 public:
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
  virtual ~CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
  
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  
  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& operator=(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& default_instance();
  
  void Swap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 service_id = 1;
  inline bool has_service_id() const;
  inline void clear_service_id();
  static const int kServiceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 service_id() const;
  inline void set_service_id(::google::protobuf::uint32 value);
  
  // optional uint64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions)
 private:
  inline void set_has_service_id();
  inline void clear_has_service_id();
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe : public ::google::protobuf::Message {
 public:
  CMsgGCToGCSOCacheSubscribe();
  virtual ~CMsgGCToGCSOCacheSubscribe();
  
  CMsgGCToGCSOCacheSubscribe(const CMsgGCToGCSOCacheSubscribe& from);
  
  inline CMsgGCToGCSOCacheSubscribe& operator=(const CMsgGCToGCSOCacheSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheSubscribe& default_instance();
  
  void Swap(CMsgGCToGCSOCacheSubscribe* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCToGCSOCacheSubscribe* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions CMsgHaveVersions;
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 subscriber = 1;
  inline bool has_subscriber() const;
  inline void clear_subscriber();
  static const int kSubscriberFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber() const;
  inline void set_subscriber(::google::protobuf::uint64 value);
  
  // optional fixed64 subscribe_to = 2;
  inline bool has_subscribe_to() const;
  inline void clear_subscribe_to();
  static const int kSubscribeToFieldNumber = 2;
  inline ::google::protobuf::uint64 subscribe_to() const;
  inline void set_subscribe_to(::google::protobuf::uint64 value);
  
  // optional fixed64 sync_version = 3;
  inline bool has_sync_version() const;
  inline void clear_sync_version();
  static const int kSyncVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 sync_version() const;
  inline void set_sync_version(::google::protobuf::uint64 value);
  
  // repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
  inline int have_versions_size() const;
  inline void clear_have_versions();
  static const int kHaveVersionsFieldNumber = 4;
  inline const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& have_versions(int index) const;
  inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* mutable_have_versions(int index);
  inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* add_have_versions();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
      have_versions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
      mutable_have_versions();
  
  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe)
 private:
  inline void set_has_subscriber();
  inline void clear_has_subscriber();
  inline void set_has_subscribe_to();
  inline void clear_has_subscribe_to();
  inline void set_has_sync_version();
  inline void clear_has_sync_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 subscriber_;
  ::google::protobuf::uint64 subscribe_to_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions > have_versions_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCToGCSOCacheSubscribe* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheUnsubscribe : public ::google::protobuf::Message {
 public:
  CMsgGCToGCSOCacheUnsubscribe();
  virtual ~CMsgGCToGCSOCacheUnsubscribe();
  
  CMsgGCToGCSOCacheUnsubscribe(const CMsgGCToGCSOCacheUnsubscribe& from);
  
  inline CMsgGCToGCSOCacheUnsubscribe& operator=(const CMsgGCToGCSOCacheUnsubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheUnsubscribe& default_instance();
  
  void Swap(CMsgGCToGCSOCacheUnsubscribe* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCToGCSOCacheUnsubscribe* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 subscriber = 1;
  inline bool has_subscriber() const;
  inline void clear_subscriber();
  static const int kSubscriberFieldNumber = 1;
  inline ::google::protobuf::uint64 subscriber() const;
  inline void set_subscriber(::google::protobuf::uint64 value);
  
  // optional fixed64 unsubscribe_from = 2;
  inline bool has_unsubscribe_from() const;
  inline void clear_unsubscribe_from();
  static const int kUnsubscribeFromFieldNumber = 2;
  inline ::google::protobuf::uint64 unsubscribe_from() const;
  inline void set_unsubscribe_from(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheUnsubscribe)
 private:
  inline void set_has_subscriber();
  inline void clear_has_subscriber();
  inline void set_has_unsubscribe_from();
  inline void clear_has_unsubscribe_from();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 subscriber_;
  ::google::protobuf::uint64 unsubscribe_from_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCToGCSOCacheUnsubscribe* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCClientPing : public ::google::protobuf::Message {
 public:
  CMsgGCClientPing();
  virtual ~CMsgGCClientPing();
  
  CMsgGCClientPing(const CMsgGCClientPing& from);
  
  inline CMsgGCClientPing& operator=(const CMsgGCClientPing& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCClientPing& default_instance();
  
  void Swap(CMsgGCClientPing* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCClientPing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCClientPing& from);
  void MergeFrom(const CMsgGCClientPing& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgGCClientPing)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCClientPing* default_instance_;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription : public ::google::protobuf::Message {
 public:
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  virtual ~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  
  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& operator=(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& default_instance();
  
  void Swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other);
  
  // implements Message ----------------------------------------------
  
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 gameitemid = 1;
  inline bool has_gameitemid() const;
  inline void clear_gameitemid();
  static const int kGameitemidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameitemid() const;
  inline void set_gameitemid(::google::protobuf::uint32 value);
  
  // optional string item_description = 2;
  inline bool has_item_description() const;
  inline void clear_item_description();
  static const int kItemDescriptionFieldNumber = 2;
  inline const ::std::string& item_description() const;
  inline void set_item_description(const ::std::string& value);
  inline void set_item_description(const char* value);
  inline void set_item_description(const char* value, size_t size);
  inline ::std::string* mutable_item_description();
  inline ::std::string* release_item_description();
  
  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
 private:
  inline void set_has_gameitemid();
  inline void clear_has_gameitemid();
  inline void set_has_item_description();
  inline void clear_has_item_description();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* item_description_;
  ::google::protobuf::uint32 gameitemid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* default_instance_;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock : public ::google::protobuf::Message {
 public:
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  virtual ~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  
  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& operator=(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& default_instance();
  
  void Swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other);
  
  // implements Message ----------------------------------------------
  
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string language = 1;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 1;
  inline const ::std::string& language() const;
  inline void set_language(const ::std::string& value);
  inline void set_language(const char* value);
  inline void set_language(const char* value, size_t size);
  inline ::std::string* mutable_language();
  inline ::std::string* release_language();
  
  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  inline int descriptions_size() const;
  inline void clear_descriptions();
  static const int kDescriptionsFieldNumber = 2;
  inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& descriptions(int index) const;
  inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* mutable_descriptions(int index);
  inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* add_descriptions();
  inline const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
      descriptions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
      mutable_descriptions();
  
  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
 private:
  inline void set_has_language();
  inline void clear_has_language();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* language_;
  ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription > descriptions_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* default_instance_;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request : public ::google::protobuf::Message {
 public:
  CWorkshop_PopulateItemDescriptions_Request();
  virtual ~CWorkshop_PopulateItemDescriptions_Request();
  
  CWorkshop_PopulateItemDescriptions_Request(const CWorkshop_PopulateItemDescriptions_Request& from);
  
  inline CWorkshop_PopulateItemDescriptions_Request& operator=(const CWorkshop_PopulateItemDescriptions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CWorkshop_PopulateItemDescriptions_Request& default_instance();
  
  void Swap(CWorkshop_PopulateItemDescriptions_Request* other);
  
  // implements Message ----------------------------------------------
  
  CWorkshop_PopulateItemDescriptions_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription SingleItemDescription;
  typedef CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock ItemDescriptionsLanguageBlock;
  
  // accessors -------------------------------------------------------
  
  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);
  
  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  inline int languages_size() const;
  inline void clear_languages();
  static const int kLanguagesFieldNumber = 2;
  inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& languages(int index) const;
  inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* mutable_languages(int index);
  inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* add_languages();
  inline const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
      languages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
      mutable_languages();
  
  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock > languages_;
  ::google::protobuf::uint32 appid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CWorkshop_PopulateItemDescriptions_Request* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgSOIDOwner

// optional uint32 type = 1;
inline bool CMsgSOIDOwner::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOIDOwner::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOIDOwner::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOIDOwner::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgSOIDOwner::type() const {
  return type_;
}
inline void CMsgSOIDOwner::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CMsgSOIDOwner::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOIDOwner::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOIDOwner::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOIDOwner::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgSOIDOwner::id() const {
  return id_;
}
inline void CMsgSOIDOwner::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CMsgSOSingleObject

// optional int32 type_id = 2;
inline bool CMsgSOSingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOSingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOSingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOSingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOSingleObject::type_id() const {
  return type_id_;
}
inline void CMsgSOSingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes object_data = 3;
inline bool CMsgSOSingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOSingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOSingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOSingleObject::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgSOSingleObject::object_data() const {
  return *object_data_;
}
inline void CMsgSOSingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOSingleObject::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOSingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOSingleObject::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  return object_data_;
}
inline ::std::string* CMsgSOSingleObject::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional fixed64 version = 4;
inline bool CMsgSOSingleObject::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOSingleObject::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOSingleObject::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOSingleObject::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOSingleObject::version() const {
  return version_;
}
inline void CMsgSOSingleObject::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// optional .CMsgSOIDOwner owner_soid = 5;
inline bool CMsgSOSingleObject::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOSingleObject::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOSingleObject::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOSingleObject::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOSingleObject::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// optional uint32 service_id = 6;
inline bool CMsgSOSingleObject::has_service_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOSingleObject::set_has_service_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOSingleObject::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOSingleObject::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOSingleObject::service_id() const {
  return service_id_;
}
inline void CMsgSOSingleObject::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects_SingleObject

// optional int32 type_id = 1;
inline bool CMsgSOMultipleObjects_SingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOMultipleObjects_SingleObject::type_id() const {
  return type_id_;
}
inline void CMsgSOMultipleObjects_SingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes object_data = 2;
inline bool CMsgSOMultipleObjects_SingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgSOMultipleObjects_SingleObject::object_data() const {
  return *object_data_;
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  return object_data_;
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects

// repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
inline int CMsgSOMultipleObjects::objects_modified_size() const {
  return objects_modified_.size();
}
inline void CMsgSOMultipleObjects::clear_objects_modified() {
  objects_modified_.Clear();
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_modified(int index) const {
  return objects_modified_.Get(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_modified(int index) {
  return objects_modified_.Mutable(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_modified() {
  return objects_modified_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_modified() const {
  return objects_modified_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_modified() {
  return &objects_modified_;
}

// optional fixed64 version = 3;
inline bool CMsgSOMultipleObjects::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOMultipleObjects::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOMultipleObjects::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOMultipleObjects::version() const {
  return version_;
}
inline void CMsgSOMultipleObjects::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
inline int CMsgSOMultipleObjects::objects_added_size() const {
  return objects_added_.size();
}
inline void CMsgSOMultipleObjects::clear_objects_added() {
  objects_added_.Clear();
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_added(int index) const {
  return objects_added_.Get(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_added(int index) {
  return objects_added_.Mutable(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_added() {
  return objects_added_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_added() const {
  return objects_added_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_added() {
  return &objects_added_;
}

// repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
inline int CMsgSOMultipleObjects::objects_removed_size() const {
  return objects_removed_.size();
}
inline void CMsgSOMultipleObjects::clear_objects_removed() {
  objects_removed_.Clear();
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_removed(int index) const {
  return objects_removed_.Get(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_removed(int index) {
  return objects_removed_.Mutable(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_removed() {
  return objects_removed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_removed() const {
  return objects_removed_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_removed() {
  return &objects_removed_;
}

// optional .CMsgSOIDOwner owner_soid = 6;
inline bool CMsgSOMultipleObjects::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOMultipleObjects::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOMultipleObjects::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOMultipleObjects::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// optional uint32 service_id = 7;
inline bool CMsgSOMultipleObjects::has_service_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_service_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSOMultipleObjects::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSOMultipleObjects::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOMultipleObjects::service_id() const {
  return service_id_;
}
inline void CMsgSOMultipleObjects::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed_SubscribedType

// optional int32 type_id = 1;
inline bool CMsgSOCacheSubscribed_SubscribedType::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOCacheSubscribed_SubscribedType::type_id() const {
  return type_id_;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// repeated bytes object_data = 2;
inline int CMsgSOCacheSubscribed_SubscribedType::object_data_size() const {
  return object_data_.size();
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgSOCacheSubscribed_SubscribedType::object_data(int index) const {
  return object_data_.Get(index);
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::mutable_object_data(int index) {
  return object_data_.Mutable(index);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const ::std::string& value) {
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::add_object_data() {
  return object_data_.Add();
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSOCacheSubscribed_SubscribedType::object_data() const {
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSOCacheSubscribed_SubscribedType::mutable_object_data() {
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed

// repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
inline int CMsgSOCacheSubscribed::objects_size() const {
  return objects_.size();
}
inline void CMsgSOCacheSubscribed::clear_objects() {
  objects_.Clear();
}
inline const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::objects(int index) const {
  return objects_.Get(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
CMsgSOCacheSubscribed::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
CMsgSOCacheSubscribed::mutable_objects() {
  return &objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOCacheSubscribed::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscribed::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscribed::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::version() const {
  return version_;
}
inline void CMsgSOCacheSubscribed::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// optional .CMsgSOIDOwner owner_soid = 4;
inline bool CMsgSOCacheSubscribed::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribed::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// optional uint32 service_id = 5;
inline bool CMsgSOCacheSubscribed::has_service_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_service_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOCacheSubscribed::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOCacheSubscribed::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribed::service_id() const {
  return service_id_;
}
inline void CMsgSOCacheSubscribed::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// repeated uint32 service_list = 6;
inline int CMsgSOCacheSubscribed::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscribed::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribed::service_list(int index) const {
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscribed::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
}
inline void CMsgSOCacheSubscribed::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscribed::service_list() const {
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscribed::mutable_service_list() {
  return &service_list_;
}

// optional fixed64 sync_version = 7;
inline bool CMsgSOCacheSubscribed::has_sync_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_sync_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSOCacheSubscribed::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSOCacheSubscribed::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::sync_version() const {
  return sync_version_;
}
inline void CMsgSOCacheSubscribed::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribedUpToDate

// optional fixed64 version = 1;
inline bool CMsgSOCacheSubscribedUpToDate::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribedUpToDate::version() const {
  return version_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscribedUpToDate::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribedUpToDate::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheSubscribedUpToDate::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribedUpToDate::service_id() const {
  return service_id_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// repeated uint32 service_list = 4;
inline int CMsgSOCacheSubscribedUpToDate::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribedUpToDate::service_list(int index) const {
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
}
inline void CMsgSOCacheSubscribedUpToDate::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscribedUpToDate::service_list() const {
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscribedUpToDate::mutable_service_list() {
  return &service_list_;
}

// optional fixed64 sync_version = 5;
inline bool CMsgSOCacheSubscribedUpToDate::has_sync_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_sync_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribedUpToDate::sync_version() const {
  return sync_version_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheUnsubscribed

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheUnsubscribed::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheUnsubscribed::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheUnsubscribed::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionCheck

// optional fixed64 version = 2;
inline bool CMsgSOCacheSubscriptionCheck::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::version() const {
  return version_;
}
inline void CMsgSOCacheSubscriptionCheck::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// optional .CMsgSOIDOwner owner_soid = 3;
inline bool CMsgSOCacheSubscriptionCheck::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionCheck::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// optional uint32 service_id = 4;
inline bool CMsgSOCacheSubscriptionCheck::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscriptionCheck::service_id() const {
  return service_id_;
}
inline void CMsgSOCacheSubscriptionCheck::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// repeated uint32 service_list = 5;
inline int CMsgSOCacheSubscriptionCheck::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscriptionCheck::service_list(int index) const {
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscriptionCheck::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
}
inline void CMsgSOCacheSubscriptionCheck::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscriptionCheck::service_list() const {
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscriptionCheck::mutable_service_list() {
  return &service_list_;
}

// optional fixed64 sync_version = 6;
inline bool CMsgSOCacheSubscriptionCheck::has_sync_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_sync_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::sync_version() const {
  return sync_version_;
}
inline void CMsgSOCacheSubscriptionCheck::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionRefresh

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscriptionRefresh::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionRefresh::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->::CMsgSOIDOwner::Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionRefresh::owner_soid() const {
  return owner_soid_ != NULL ? *owner_soid_ : *default_instance_->owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) owner_soid_ = new ::CMsgSOIDOwner;
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::release_owner_soid() {
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CMsgSOCacheVersion

// optional fixed64 version = 1;
inline bool CMsgSOCacheVersion::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheVersion::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheVersion::version() const {
  return version_;
}
inline void CMsgSOCacheVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgGCMultiplexMessage

// optional uint32 msgtype = 1;
inline bool CMsgGCMultiplexMessage::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMultiplexMessage::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMultiplexMessage::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMultiplexMessage::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 CMsgGCMultiplexMessage::msgtype() const {
  return msgtype_;
}
inline void CMsgGCMultiplexMessage::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
}

// optional bytes payload = 2;
inline bool CMsgGCMultiplexMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMultiplexMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMultiplexMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMultiplexMessage::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& CMsgGCMultiplexMessage::payload() const {
  return *payload_;
}
inline void CMsgGCMultiplexMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void CMsgGCMultiplexMessage::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void CMsgGCMultiplexMessage::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCMultiplexMessage::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* CMsgGCMultiplexMessage::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated fixed64 steamids = 3;
inline int CMsgGCMultiplexMessage::steamids_size() const {
  return steamids_.size();
}
inline void CMsgGCMultiplexMessage::clear_steamids() {
  steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCMultiplexMessage::steamids(int index) const {
  return steamids_.Get(index);
}
inline void CMsgGCMultiplexMessage::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
}
inline void CMsgGCMultiplexMessage::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCMultiplexMessage::steamids() const {
  return steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCMultiplexMessage::mutable_steamids() {
  return &steamids_;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterAck::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterAck::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterAck::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterAck::dir_index() const {
  return dir_index_;
}
inline void CGCToGCMsgMasterAck::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
}

// optional string machine_name = 3;
inline bool CGCToGCMsgMasterAck::has_machine_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_machine_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgMasterAck::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgMasterAck::clear_machine_name() {
  if (machine_name_ != &::google::protobuf::internal::kEmptyString) {
    machine_name_->clear();
  }
  clear_has_machine_name();
}
inline const ::std::string& CGCToGCMsgMasterAck::machine_name() const {
  return *machine_name_;
}
inline void CGCToGCMsgMasterAck::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCToGCMsgMasterAck::mutable_machine_name() {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  return machine_name_;
}
inline ::std::string* CGCToGCMsgMasterAck::release_machine_name() {
  clear_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = machine_name_;
    machine_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string process_name = 4;
inline bool CGCToGCMsgMasterAck::has_process_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_process_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCToGCMsgMasterAck::clear_has_process_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCToGCMsgMasterAck::clear_process_name() {
  if (process_name_ != &::google::protobuf::internal::kEmptyString) {
    process_name_->clear();
  }
  clear_has_process_name();
}
inline const ::std::string& CGCToGCMsgMasterAck::process_name() const {
  return *process_name_;
}
inline void CGCToGCMsgMasterAck::set_process_name(const ::std::string& value) {
  set_has_process_name();
  if (process_name_ == &::google::protobuf::internal::kEmptyString) {
    process_name_ = new ::std::string;
  }
  process_name_->assign(value);
}
inline void CGCToGCMsgMasterAck::set_process_name(const char* value) {
  set_has_process_name();
  if (process_name_ == &::google::protobuf::internal::kEmptyString) {
    process_name_ = new ::std::string;
  }
  process_name_->assign(value);
}
inline void CGCToGCMsgMasterAck::set_process_name(const char* value, size_t size) {
  set_has_process_name();
  if (process_name_ == &::google::protobuf::internal::kEmptyString) {
    process_name_ = new ::std::string;
  }
  process_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCToGCMsgMasterAck::mutable_process_name() {
  set_has_process_name();
  if (process_name_ == &::google::protobuf::internal::kEmptyString) {
    process_name_ = new ::std::string;
  }
  return process_name_;
}
inline ::std::string* CGCToGCMsgMasterAck::release_process_name() {
  clear_has_process_name();
  if (process_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = process_name_;
    process_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated uint32 type_instances = 5;
inline int CGCToGCMsgMasterAck::type_instances_size() const {
  return type_instances_.size();
}
inline void CGCToGCMsgMasterAck::clear_type_instances() {
  type_instances_.Clear();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterAck::type_instances(int index) const {
  return type_instances_.Get(index);
}
inline void CGCToGCMsgMasterAck::set_type_instances(int index, ::google::protobuf::uint32 value) {
  type_instances_.Set(index, value);
}
inline void CGCToGCMsgMasterAck::add_type_instances(::google::protobuf::uint32 value) {
  type_instances_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCToGCMsgMasterAck::type_instances() const {
  return type_instances_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCToGCMsgMasterAck::mutable_type_instances() {
  return &type_instances_;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck_Response

// optional int32 eresult = 1 [default = 2];
inline bool CGCToGCMsgMasterAck_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterAck_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterAck_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterAck_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CGCToGCMsgMasterAck_Response::eresult() const {
  return eresult_;
}
inline void CGCToGCMsgMasterAck_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete_GCInfo

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_dir_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_has_dir_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterStartupComplete_GCInfo::dir_index() const {
  return dir_index_;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
}

// optional string machine_name = 2;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_machine_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_has_machine_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_machine_name() {
  if (machine_name_ != &::google::protobuf::internal::kEmptyString) {
    machine_name_->clear();
  }
  clear_has_machine_name();
}
inline const ::std::string& CGCToGCMsgMasterStartupComplete_GCInfo::machine_name() const {
  return *machine_name_;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCToGCMsgMasterStartupComplete_GCInfo::mutable_machine_name() {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  return machine_name_;
}
inline ::std::string* CGCToGCMsgMasterStartupComplete_GCInfo::release_machine_name() {
  clear_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = machine_name_;
    machine_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete

// repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
inline int CGCToGCMsgMasterStartupComplete::gc_info_size() const {
  return gc_info_.size();
}
inline void CGCToGCMsgMasterStartupComplete::clear_gc_info() {
  gc_info_.Clear();
}
inline const ::CGCToGCMsgMasterStartupComplete_GCInfo& CGCToGCMsgMasterStartupComplete::gc_info(int index) const {
  return gc_info_.Get(index);
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::mutable_gc_info(int index) {
  return gc_info_.Mutable(index);
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::add_gc_info() {
  return gc_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
CGCToGCMsgMasterStartupComplete::gc_info() const {
  return gc_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
CGCToGCMsgMasterStartupComplete::mutable_gc_info() {
  return &gc_info_;
}

// -------------------------------------------------------------------

// CGCToGCMsgRouted

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRouted::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgRouted::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgRouted::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgRouted::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 CGCToGCMsgRouted::msg_type() const {
  return msg_type_;
}
inline void CGCToGCMsgRouted::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional fixed64 sender_id = 2;
inline bool CGCToGCMsgRouted::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgRouted::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgRouted::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgRouted::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CGCToGCMsgRouted::sender_id() const {
  return sender_id_;
}
inline void CGCToGCMsgRouted::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
}

// optional bytes net_message = 3;
inline bool CGCToGCMsgRouted::has_net_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCToGCMsgRouted::set_has_net_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCToGCMsgRouted::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCToGCMsgRouted::clear_net_message() {
  if (net_message_ != &::google::protobuf::internal::kEmptyString) {
    net_message_->clear();
  }
  clear_has_net_message();
}
inline const ::std::string& CGCToGCMsgRouted::net_message() const {
  return *net_message_;
}
inline void CGCToGCMsgRouted::set_net_message(const ::std::string& value) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(value);
}
inline void CGCToGCMsgRouted::set_net_message(const char* value) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(value);
}
inline void CGCToGCMsgRouted::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCToGCMsgRouted::mutable_net_message() {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  return net_message_;
}
inline ::std::string* CGCToGCMsgRouted::release_net_message() {
  clear_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = net_message_;
    net_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CGCToGCMsgRoutedReply

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRoutedReply::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgRoutedReply::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgRoutedReply::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgRoutedReply::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 CGCToGCMsgRoutedReply::msg_type() const {
  return msg_type_;
}
inline void CGCToGCMsgRoutedReply::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional bytes net_message = 2;
inline bool CGCToGCMsgRoutedReply::has_net_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgRoutedReply::set_has_net_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgRoutedReply::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgRoutedReply::clear_net_message() {
  if (net_message_ != &::google::protobuf::internal::kEmptyString) {
    net_message_->clear();
  }
  clear_has_net_message();
}
inline const ::std::string& CGCToGCMsgRoutedReply::net_message() const {
  return *net_message_;
}
inline void CGCToGCMsgRoutedReply::set_net_message(const ::std::string& value) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(value);
}
inline void CGCToGCMsgRoutedReply::set_net_message(const char* value) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(value);
}
inline void CGCToGCMsgRoutedReply::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  net_message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CGCToGCMsgRoutedReply::mutable_net_message() {
  set_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    net_message_ = new ::std::string;
  }
  return net_message_;
}
inline ::std::string* CGCToGCMsgRoutedReply::release_net_message() {
  clear_has_net_message();
  if (net_message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = net_message_;
    net_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo_CMsgUpdate

// optional fixed64 steamid = 1;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::steamid() const {
  return steamid_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional fixed32 ip = 2;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::ip() const {
  return ip_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
}

// optional bool trusted = 3;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_trusted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_trusted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::trusted() const {
  return trusted_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo

// repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
inline int CMsgGCUpdateSubGCSessionInfo::updates_size() const {
  return updates_.size();
}
inline void CMsgGCUpdateSubGCSessionInfo::clear_updates() {
  updates_.Clear();
}
inline const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& CMsgGCUpdateSubGCSessionInfo::updates(int index) const {
  return updates_.Get(index);
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::mutable_updates(int index) {
  return updates_.Mutable(index);
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::add_updates() {
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
CMsgGCUpdateSubGCSessionInfo::updates() const {
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
CMsgGCUpdateSubGCSessionInfo::mutable_updates() {
  return &updates_;
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfo

// optional fixed64 steamid = 1;
inline bool CMsgGCRequestSubGCSessionInfo::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfo::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfo::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfo::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCRequestSubGCSessionInfo::steamid() const {
  return steamid_;
}
inline void CMsgGCRequestSubGCSessionInfo::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfoResponse

// optional fixed32 ip = 1;
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgGCRequestSubGCSessionInfoResponse::ip() const {
  return ip_;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
}

// optional bool trusted = 2;
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_trusted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_has_trusted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::trusted() const {
  return trusted_;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheHaveVersion

// optional .CMsgSOIDOwner soid = 1;
inline bool CMsgSOCacheHaveVersion::has_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheHaveVersion::clear_has_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheHaveVersion::clear_soid() {
  if (soid_ != NULL) soid_->::CMsgSOIDOwner::Clear();
  clear_has_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheHaveVersion::soid() const {
  return soid_ != NULL ? *soid_ : *default_instance_->soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::mutable_soid() {
  set_has_soid();
  if (soid_ == NULL) soid_ = new ::CMsgSOIDOwner;
  return soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::release_soid() {
  clear_has_soid();
  ::CMsgSOIDOwner* temp = soid_;
  soid_ = NULL;
  return temp;
}

// optional fixed64 version = 2;
inline bool CMsgSOCacheHaveVersion::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheHaveVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheHaveVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheHaveVersion::version() const {
  return version_;
}
inline void CMsgSOCacheHaveVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheHaveVersion::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheHaveVersion::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheHaveVersion::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheHaveVersion::service_id() const {
  return service_id_;
}
inline void CMsgSOCacheHaveVersion::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// optional uint32 cached_file_version = 4;
inline bool CMsgSOCacheHaveVersion::has_cached_file_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_cached_file_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOCacheHaveVersion::clear_has_cached_file_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOCacheHaveVersion::clear_cached_file_version() {
  cached_file_version_ = 0u;
  clear_has_cached_file_version();
}
inline ::google::protobuf::uint32 CMsgSOCacheHaveVersion::cached_file_version() const {
  return cached_file_version_;
}
inline void CMsgSOCacheHaveVersion::set_cached_file_version(::google::protobuf::uint32 value) {
  set_has_cached_file_version();
  cached_file_version_ = value;
}

// -------------------------------------------------------------------

// CMsgClientHello

// optional uint32 version = 1;
inline bool CMsgClientHello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientHello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientHello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgClientHello::version() const {
  return version_;
}
inline void CMsgClientHello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
inline int CMsgClientHello::socache_have_versions_size() const {
  return socache_have_versions_.size();
}
inline void CMsgClientHello::clear_socache_have_versions() {
  socache_have_versions_.Clear();
}
inline const ::CMsgSOCacheHaveVersion& CMsgClientHello::socache_have_versions(int index) const {
  return socache_have_versions_.Get(index);
}
inline ::CMsgSOCacheHaveVersion* CMsgClientHello::mutable_socache_have_versions(int index) {
  return socache_have_versions_.Mutable(index);
}
inline ::CMsgSOCacheHaveVersion* CMsgClientHello::add_socache_have_versions() {
  return socache_have_versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
CMsgClientHello::socache_have_versions() const {
  return socache_have_versions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
CMsgClientHello::mutable_socache_have_versions() {
  return &socache_have_versions_;
}

// optional uint32 client_session_need = 3;
inline bool CMsgClientHello::has_client_session_need() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientHello::set_has_client_session_need() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientHello::clear_has_client_session_need() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientHello::clear_client_session_need() {
  client_session_need_ = 0u;
  clear_has_client_session_need();
}
inline ::google::protobuf::uint32 CMsgClientHello::client_session_need() const {
  return client_session_need_;
}
inline void CMsgClientHello::set_client_session_need(::google::protobuf::uint32 value) {
  set_has_client_session_need();
  client_session_need_ = value;
}

// optional .PartnerAccountType client_launcher = 4 [default = PARTNER_NONE];
inline bool CMsgClientHello::has_client_launcher() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientHello::set_has_client_launcher() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientHello::clear_has_client_launcher() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientHello::clear_client_launcher() {
  client_launcher_ = 0;
  clear_has_client_launcher();
}
inline PartnerAccountType CMsgClientHello::client_launcher() const {
  return static_cast< PartnerAccountType >(client_launcher_);
}
inline void CMsgClientHello::set_client_launcher(PartnerAccountType value) {
  GOOGLE_DCHECK(PartnerAccountType_IsValid(value));
  set_has_client_launcher();
  client_launcher_ = value;
}

// optional string secret_key = 5;
inline bool CMsgClientHello::has_secret_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientHello::set_has_secret_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientHello::clear_has_secret_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientHello::clear_secret_key() {
  if (secret_key_ != &::google::protobuf::internal::kEmptyString) {
    secret_key_->clear();
  }
  clear_has_secret_key();
}
inline const ::std::string& CMsgClientHello::secret_key() const {
  return *secret_key_;
}
inline void CMsgClientHello::set_secret_key(const ::std::string& value) {
  set_has_secret_key();
  if (secret_key_ == &::google::protobuf::internal::kEmptyString) {
    secret_key_ = new ::std::string;
  }
  secret_key_->assign(value);
}
inline void CMsgClientHello::set_secret_key(const char* value) {
  set_has_secret_key();
  if (secret_key_ == &::google::protobuf::internal::kEmptyString) {
    secret_key_ = new ::std::string;
  }
  secret_key_->assign(value);
}
inline void CMsgClientHello::set_secret_key(const char* value, size_t size) {
  set_has_secret_key();
  if (secret_key_ == &::google::protobuf::internal::kEmptyString) {
    secret_key_ = new ::std::string;
  }
  secret_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientHello::mutable_secret_key() {
  set_has_secret_key();
  if (secret_key_ == &::google::protobuf::internal::kEmptyString) {
    secret_key_ = new ::std::string;
  }
  return secret_key_;
}
inline ::std::string* CMsgClientHello::release_secret_key() {
  clear_has_secret_key();
  if (secret_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secret_key_;
    secret_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgClientWelcome_Location

// optional float latitude = 1;
inline bool CMsgClientWelcome_Location::has_latitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientWelcome_Location::set_has_latitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientWelcome_Location::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientWelcome_Location::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float CMsgClientWelcome_Location::latitude() const {
  return latitude_;
}
inline void CMsgClientWelcome_Location::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
}

// optional float longitude = 2;
inline bool CMsgClientWelcome_Location::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientWelcome_Location::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientWelcome_Location::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientWelcome_Location::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float CMsgClientWelcome_Location::longitude() const {
  return longitude_;
}
inline void CMsgClientWelcome_Location::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
}

// optional string country = 3;
inline bool CMsgClientWelcome_Location::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientWelcome_Location::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientWelcome_Location::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientWelcome_Location::clear_country() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    country_->clear();
  }
  clear_has_country();
}
inline const ::std::string& CMsgClientWelcome_Location::country() const {
  return *country_;
}
inline void CMsgClientWelcome_Location::set_country(const ::std::string& value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CMsgClientWelcome_Location::set_country(const char* value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CMsgClientWelcome_Location::set_country(const char* value, size_t size) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientWelcome_Location::mutable_country() {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  return country_;
}
inline ::std::string* CMsgClientWelcome_Location::release_country() {
  clear_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_;
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgClientWelcome

// optional uint32 version = 1;
inline bool CMsgClientWelcome::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientWelcome::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientWelcome::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientWelcome::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgClientWelcome::version() const {
  return version_;
}
inline void CMsgClientWelcome::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// optional bytes game_data = 2;
inline bool CMsgClientWelcome::has_game_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientWelcome::set_has_game_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientWelcome::clear_has_game_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientWelcome::clear_game_data() {
  if (game_data_ != &::google::protobuf::internal::kEmptyString) {
    game_data_->clear();
  }
  clear_has_game_data();
}
inline const ::std::string& CMsgClientWelcome::game_data() const {
  return *game_data_;
}
inline void CMsgClientWelcome::set_game_data(const ::std::string& value) {
  set_has_game_data();
  if (game_data_ == &::google::protobuf::internal::kEmptyString) {
    game_data_ = new ::std::string;
  }
  game_data_->assign(value);
}
inline void CMsgClientWelcome::set_game_data(const char* value) {
  set_has_game_data();
  if (game_data_ == &::google::protobuf::internal::kEmptyString) {
    game_data_ = new ::std::string;
  }
  game_data_->assign(value);
}
inline void CMsgClientWelcome::set_game_data(const void* value, size_t size) {
  set_has_game_data();
  if (game_data_ == &::google::protobuf::internal::kEmptyString) {
    game_data_ = new ::std::string;
  }
  game_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientWelcome::mutable_game_data() {
  set_has_game_data();
  if (game_data_ == &::google::protobuf::internal::kEmptyString) {
    game_data_ = new ::std::string;
  }
  return game_data_;
}
inline ::std::string* CMsgClientWelcome::release_game_data() {
  clear_has_game_data();
  if (game_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_data_;
    game_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
inline int CMsgClientWelcome::outofdate_subscribed_caches_size() const {
  return outofdate_subscribed_caches_.size();
}
inline void CMsgClientWelcome::clear_outofdate_subscribed_caches() {
  outofdate_subscribed_caches_.Clear();
}
inline const ::CMsgSOCacheSubscribed& CMsgClientWelcome::outofdate_subscribed_caches(int index) const {
  return outofdate_subscribed_caches_.Get(index);
}
inline ::CMsgSOCacheSubscribed* CMsgClientWelcome::mutable_outofdate_subscribed_caches(int index) {
  return outofdate_subscribed_caches_.Mutable(index);
}
inline ::CMsgSOCacheSubscribed* CMsgClientWelcome::add_outofdate_subscribed_caches() {
  return outofdate_subscribed_caches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >&
CMsgClientWelcome::outofdate_subscribed_caches() const {
  return outofdate_subscribed_caches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed >*
CMsgClientWelcome::mutable_outofdate_subscribed_caches() {
  return &outofdate_subscribed_caches_;
}

// repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
inline int CMsgClientWelcome::uptodate_subscribed_caches_size() const {
  return uptodate_subscribed_caches_.size();
}
inline void CMsgClientWelcome::clear_uptodate_subscribed_caches() {
  uptodate_subscribed_caches_.Clear();
}
inline const ::CMsgSOCacheSubscriptionCheck& CMsgClientWelcome::uptodate_subscribed_caches(int index) const {
  return uptodate_subscribed_caches_.Get(index);
}
inline ::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::mutable_uptodate_subscribed_caches(int index) {
  return uptodate_subscribed_caches_.Mutable(index);
}
inline ::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::add_uptodate_subscribed_caches() {
  return uptodate_subscribed_caches_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >&
CMsgClientWelcome::uptodate_subscribed_caches() const {
  return uptodate_subscribed_caches_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >*
CMsgClientWelcome::mutable_uptodate_subscribed_caches() {
  return &uptodate_subscribed_caches_;
}

// optional .CMsgClientWelcome.Location location = 5;
inline bool CMsgClientWelcome::has_location() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientWelcome::set_has_location() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientWelcome::clear_has_location() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientWelcome::clear_location() {
  if (location_ != NULL) location_->::CMsgClientWelcome_Location::Clear();
  clear_has_location();
}
inline const ::CMsgClientWelcome_Location& CMsgClientWelcome::location() const {
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::mutable_location() {
  set_has_location();
  if (location_ == NULL) location_ = new ::CMsgClientWelcome_Location;
  return location_;
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::release_location() {
  clear_has_location();
  ::CMsgClientWelcome_Location* temp = location_;
  location_ = NULL;
  return temp;
}

// optional bytes save_game_key = 6;
inline bool CMsgClientWelcome::has_save_game_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientWelcome::set_has_save_game_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientWelcome::clear_has_save_game_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientWelcome::clear_save_game_key() {
  if (save_game_key_ != &::google::protobuf::internal::kEmptyString) {
    save_game_key_->clear();
  }
  clear_has_save_game_key();
}
inline const ::std::string& CMsgClientWelcome::save_game_key() const {
  return *save_game_key_;
}
inline void CMsgClientWelcome::set_save_game_key(const ::std::string& value) {
  set_has_save_game_key();
  if (save_game_key_ == &::google::protobuf::internal::kEmptyString) {
    save_game_key_ = new ::std::string;
  }
  save_game_key_->assign(value);
}
inline void CMsgClientWelcome::set_save_game_key(const char* value) {
  set_has_save_game_key();
  if (save_game_key_ == &::google::protobuf::internal::kEmptyString) {
    save_game_key_ = new ::std::string;
  }
  save_game_key_->assign(value);
}
inline void CMsgClientWelcome::set_save_game_key(const void* value, size_t size) {
  set_has_save_game_key();
  if (save_game_key_ == &::google::protobuf::internal::kEmptyString) {
    save_game_key_ = new ::std::string;
  }
  save_game_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientWelcome::mutable_save_game_key() {
  set_has_save_game_key();
  if (save_game_key_ == &::google::protobuf::internal::kEmptyString) {
    save_game_key_ = new ::std::string;
  }
  return save_game_key_;
}
inline ::std::string* CMsgClientWelcome::release_save_game_key() {
  clear_has_save_game_key();
  if (save_game_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = save_game_key_;
    save_game_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgConnectionStatus

// optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
inline bool CMsgConnectionStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConnectionStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConnectionStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConnectionStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline GCConnectionStatus CMsgConnectionStatus::status() const {
  return static_cast< GCConnectionStatus >(status_);
}
inline void CMsgConnectionStatus::set_status(GCConnectionStatus value) {
  GOOGLE_DCHECK(GCConnectionStatus_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional uint32 client_session_need = 2;
inline bool CMsgConnectionStatus::has_client_session_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConnectionStatus::set_has_client_session_need() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgConnectionStatus::clear_has_client_session_need() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgConnectionStatus::clear_client_session_need() {
  client_session_need_ = 0u;
  clear_has_client_session_need();
}
inline ::google::protobuf::uint32 CMsgConnectionStatus::client_session_need() const {
  return client_session_need_;
}
inline void CMsgConnectionStatus::set_client_session_need(::google::protobuf::uint32 value) {
  set_has_client_session_need();
  client_session_need_ = value;
}

// optional int32 queue_position = 3;
inline bool CMsgConnectionStatus::has_queue_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectionStatus::set_has_queue_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgConnectionStatus::clear_has_queue_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgConnectionStatus::clear_queue_position() {
  queue_position_ = 0;
  clear_has_queue_position();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::queue_position() const {
  return queue_position_;
}
inline void CMsgConnectionStatus::set_queue_position(::google::protobuf::int32 value) {
  set_has_queue_position();
  queue_position_ = value;
}

// optional int32 queue_size = 4;
inline bool CMsgConnectionStatus::has_queue_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectionStatus::set_has_queue_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgConnectionStatus::clear_has_queue_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgConnectionStatus::clear_queue_size() {
  queue_size_ = 0;
  clear_has_queue_size();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::queue_size() const {
  return queue_size_;
}
inline void CMsgConnectionStatus::set_queue_size(::google::protobuf::int32 value) {
  set_has_queue_size();
  queue_size_ = value;
}

// optional int32 wait_seconds = 5;
inline bool CMsgConnectionStatus::has_wait_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgConnectionStatus::set_has_wait_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgConnectionStatus::clear_has_wait_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgConnectionStatus::clear_wait_seconds() {
  wait_seconds_ = 0;
  clear_has_wait_seconds();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::wait_seconds() const {
  return wait_seconds_;
}
inline void CMsgConnectionStatus::set_wait_seconds(::google::protobuf::int32 value) {
  set_has_wait_seconds();
  wait_seconds_ = value;
}

// optional int32 estimated_wait_seconds_remaining = 6;
inline bool CMsgConnectionStatus::has_estimated_wait_seconds_remaining() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgConnectionStatus::set_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgConnectionStatus::clear_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgConnectionStatus::clear_estimated_wait_seconds_remaining() {
  estimated_wait_seconds_remaining_ = 0;
  clear_has_estimated_wait_seconds_remaining();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::estimated_wait_seconds_remaining() const {
  return estimated_wait_seconds_remaining_;
}
inline void CMsgConnectionStatus::set_estimated_wait_seconds_remaining(::google::protobuf::int32 value) {
  set_has_estimated_wait_seconds_remaining();
  estimated_wait_seconds_remaining_ = value;
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions

// optional uint32 service_id = 1;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_service_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_has_service_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::service_id() const {
  return service_id_;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
}

// optional uint64 version = 2;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::version() const {
  return version_;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheSubscribe::has_subscriber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_subscriber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_subscriber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscriber() {
  subscriber_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::subscriber() const {
  return subscriber_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscriber(::google::protobuf::uint64 value) {
  set_has_subscriber();
  subscriber_ = value;
}

// optional fixed64 subscribe_to = 2;
inline bool CMsgGCToGCSOCacheSubscribe::has_subscribe_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_subscribe_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_subscribe_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscribe_to() {
  subscribe_to_ = GOOGLE_ULONGLONG(0);
  clear_has_subscribe_to();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::subscribe_to() const {
  return subscribe_to_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscribe_to(::google::protobuf::uint64 value) {
  set_has_subscribe_to();
  subscribe_to_ = value;
}

// optional fixed64 sync_version = 3;
inline bool CMsgGCToGCSOCacheSubscribe::has_sync_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_sync_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::sync_version() const {
  return sync_version_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
}

// repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
inline int CMsgGCToGCSOCacheSubscribe::have_versions_size() const {
  return have_versions_.size();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_have_versions() {
  have_versions_.Clear();
}
inline const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& CMsgGCToGCSOCacheSubscribe::have_versions(int index) const {
  return have_versions_.Get(index);
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::mutable_have_versions(int index) {
  return have_versions_.Mutable(index);
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::add_have_versions() {
  return have_versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
CMsgGCToGCSOCacheSubscribe::have_versions() const {
  return have_versions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
CMsgGCToGCSOCacheSubscribe::mutable_have_versions() {
  return &have_versions_;
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheUnsubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheUnsubscribe::has_subscriber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_has_subscriber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_has_subscriber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_subscriber() {
  subscriber_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheUnsubscribe::subscriber() const {
  return subscriber_;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_subscriber(::google::protobuf::uint64 value) {
  set_has_subscriber();
  subscriber_ = value;
}

// optional fixed64 unsubscribe_from = 2;
inline bool CMsgGCToGCSOCacheUnsubscribe::has_unsubscribe_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_has_unsubscribe_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_has_unsubscribe_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_unsubscribe_from() {
  unsubscribe_from_ = GOOGLE_ULONGLONG(0);
  clear_has_unsubscribe_from();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheUnsubscribe::unsubscribe_from() const {
  return unsubscribe_from_;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_unsubscribe_from(::google::protobuf::uint64 value) {
  set_has_unsubscribe_from();
  unsubscribe_from_ = value;
}

// -------------------------------------------------------------------

// CMsgGCClientPing

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription

// optional uint32 gameitemid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_gameitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_has_gameitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_has_gameitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_gameitemid() {
  gameitemid_ = 0u;
  clear_has_gameitemid();
}
inline ::google::protobuf::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::gameitemid() const {
  return gameitemid_;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_gameitemid(::google::protobuf::uint32 value) {
  set_has_gameitemid();
  gameitemid_ = value;
}

// optional string item_description = 2;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_item_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_has_item_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_has_item_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_item_description() {
  if (item_description_ != &::google::protobuf::internal::kEmptyString) {
    item_description_->clear();
  }
  clear_has_item_description();
}
inline const ::std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::item_description() const {
  return *item_description_;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const ::std::string& value) {
  set_has_item_description();
  if (item_description_ == &::google::protobuf::internal::kEmptyString) {
    item_description_ = new ::std::string;
  }
  item_description_->assign(value);
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value) {
  set_has_item_description();
  if (item_description_ == &::google::protobuf::internal::kEmptyString) {
    item_description_ = new ::std::string;
  }
  item_description_->assign(value);
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value, size_t size) {
  set_has_item_description();
  if (item_description_ == &::google::protobuf::internal::kEmptyString) {
    item_description_ = new ::std::string;
  }
  item_description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::mutable_item_description() {
  set_has_item_description();
  if (item_description_ == &::google::protobuf::internal::kEmptyString) {
    item_description_ = new ::std::string;
  }
  return item_description_;
}
inline ::std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::release_item_description() {
  clear_has_item_description();
  if (item_description_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = item_description_;
    item_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock

// optional string language = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_has_language() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_has_language() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_language() {
  if (language_ != &::google::protobuf::internal::kEmptyString) {
    language_->clear();
  }
  clear_has_language();
}
inline const ::std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::language() const {
  return *language_;
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const ::std::string& value) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(value);
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(value);
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value, size_t size) {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  language_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_language() {
  set_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    language_ = new ::std::string;
  }
  return language_;
}
inline ::std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::release_language() {
  clear_has_language();
  if (language_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = language_;
    language_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
inline int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions_size() const {
  return descriptions_.size();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_descriptions() {
  descriptions_.Clear();
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions(int index) const {
  return descriptions_.Get(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions(int index) {
  return descriptions_.Mutable(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::add_descriptions() {
  return descriptions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions() const {
  return descriptions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions() {
  return &descriptions_;
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request

// optional uint32 appid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CWorkshop_PopulateItemDescriptions_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CWorkshop_PopulateItemDescriptions_Request::appid() const {
  return appid_;
}
inline void CWorkshop_PopulateItemDescriptions_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
inline int CWorkshop_PopulateItemDescriptions_Request::languages_size() const {
  return languages_.size();
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_languages() {
  languages_.Clear();
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::languages(int index) const {
  return languages_.Get(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::mutable_languages(int index) {
  return languages_.Mutable(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::add_languages() {
  return languages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
CWorkshop_PopulateItemDescriptions_Request::languages() const {
  return languages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
CWorkshop_PopulateItemDescriptions_Request::mutable_languages() {
  return &languages_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< PartnerAccountType>() {
  return PartnerAccountType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< GCConnectionStatus>() {
  return GCConnectionStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
