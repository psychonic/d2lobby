// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "matchmaker_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::EnumDescriptor* MatchType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DOTABotDifficulty_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MatchLanguages_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_matchmaker_5fcommon_2eproto() {
  protobuf_AddDesc_matchmaker_5fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "matchmaker_common.proto");
  GOOGLE_CHECK(file != NULL);
  MatchType_descriptor_ = file->enum_type(0);
  DOTABotDifficulty_descriptor_ = file->enum_type(1);
  MatchLanguages_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_matchmaker_5fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_matchmaker_5fcommon_2eproto() {
}

void protobuf_AddDesc_matchmaker_5fcommon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027matchmaker_common.proto*\217\001\n\tMatchType\022"
    "\025\n\021MATCH_TYPE_CASUAL\020\000\022\030\n\024MATCH_TYPE_COO"
    "P_BOTS\020\001\022\032\n\026MATCH_TYPE_TEAM_RANKED\020\002\022\031\n\025"
    "MATCH_TYPE_SOLO_QUEUE\020\003\022\032\n\026MATCH_TYPE_CO"
    "MPETITIVE\020\004*\204\002\n\021DOTABotDifficulty\022\032\n\026BOT"
    "_DIFFICULTY_PASSIVE\020\000\022\027\n\023BOT_DIFFICULTY_"
    "EASY\020\001\022\031\n\025BOT_DIFFICULTY_MEDIUM\020\002\022\027\n\023BOT"
    "_DIFFICULTY_HARD\020\003\022\031\n\025BOT_DIFFICULTY_UNF"
    "AIR\020\004\022\032\n\026BOT_DIFFICULTY_INVALID\020\005\022\031\n\025BOT"
    "_DIFFICULTY_EXTRA1\020\006\022\031\n\025BOT_DIFFICULTY_E"
    "XTRA2\020\007\022\031\n\025BOT_DIFFICULTY_EXTRA3\020\010*\272\001\n\016M"
    "atchLanguages\022\032\n\026MATCH_LANGUAGE_ENGLISH\020"
    "\001\022\032\n\026MATCH_LANGUAGE_RUSSIAN\020\002\022\032\n\026MATCH_L"
    "ANGUAGE_CHINESE\020\003\022\031\n\025MATCH_LANGUAGE_KORE"
    "AN\020\004\022\032\n\026MATCH_LANGUAGE_SPANISH\020\005\022\035\n\031MATC"
    "H_LANGUAGE_PORTUGUESE\020\006", 623);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "matchmaker_common.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_matchmaker_5fcommon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_matchmaker_5fcommon_2eproto {
  StaticDescriptorInitializer_matchmaker_5fcommon_2eproto() {
    protobuf_AddDesc_matchmaker_5fcommon_2eproto();
  }
} static_descriptor_initializer_matchmaker_5fcommon_2eproto_;

const ::google::protobuf::EnumDescriptor* MatchType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchType_descriptor_;
}
bool MatchType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DOTABotDifficulty_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DOTABotDifficulty_descriptor_;
}
bool DOTABotDifficulty_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MatchLanguages_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchLanguages_descriptor_;
}
bool MatchLanguages_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
